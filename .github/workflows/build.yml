name: 构建

on:
  schedule:
    - cron: "0 16 * * *"
  workflow_dispatch:
  push:
    tags:
      - v*

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
 
jobs:
  check_commit:
    runs-on: ubuntu-latest
    outputs:
      has-new-commit: ${{ steps.check-new-commits.has-new-commits }}
    steps:
      - name: Check for new commits today
        id: check-new-commits
        uses: adriangl/check-new-commits-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          seconds: 86400
          branch: 'main'

  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64, arm64 ]
        os: [ windows-latest]
        exclude:
          - os: windows-latest
            arch: arm64
          - os: windows-latest
            arch: x86
    runs-on: ${{ matrix.os }}
    needs: check_commit
    if: ${{ needs.check_commit.outputs.has-new-commit == 'true' || github.event_name == 'workflow_dispatch' || (startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Init zip folder
        run: mkdir zip

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Build (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: Nuitka/Nuitka-Action@main
        with:
          mode: standalone
          script-name: main.py
          output-file: ClassWidgets
          enable-plugins: pyqt5
          include-data-files: LICENSE=LICENSE
          include-data-dir: |
            audio=audio
            config=config
            font=font
            img=img
            plugins=plugins
            ui=ui
            view=view
          include-package: |
            pyttsx3.drivers
            comtypes
          disable-console: true
          product-name: Class Widgets二部九特供
          file-version: 1.0
          windows-icon-from-ico: ./img/favicon.ico

      - name: Package (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          curl -o zip.exe -L http://www.stahlworks.com/dev/zip.exe
          xcopy build\main.dist\* ClassWidgets\ /e/y
          ./zip -r -q "./zip/ClassWidgets-Windows-${{ matrix.arch }} (Unsigned).zip" ClassWidgets

      - name: Upload unsigned application
        if: ${{ matrix.os != 'windows-latest' || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./zip
      - name: Upload unsigned single file
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        id: upload-unsigned-artifact
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }} (Unsigned single - DO NOT use)
          path: ./ClassWidgets/ClassWidgets.exe
      - name: Sign application (Release)
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'release-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: '.\ClassWidgets'
      - name: Recompress
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        run: |
          del "zip/ClassWidgets-Windows-${{ matrix.arch }} (Unsigned).zip"
          ./zip -r -q zip/ClassWidgets-Windows-${{ matrix.arch }}.zip ClassWidgets
      - name: Upload signed application
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-latest-${{ matrix.arch }}
          path: ./zip

  release:
    needs: [builder_matrix]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    uses: ./.github/workflows/release.yml
    with:
      run_id: ${{ github.run_id }}
